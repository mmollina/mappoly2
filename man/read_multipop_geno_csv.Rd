% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read.R
\name{read_multipop_geno_csv}
\alias{read_multipop_geno_csv}
\title{Create a List of \code{mappoly.data} Objects for F1 Crosses}
\usage{
read_multipop_geno_csv(
  data.file,
  pedigree.file,
  ploidy.vec,
  filter.non.conforming = TRUE,
  filter.redundant = TRUE,
  verbose = TRUE
)
}
\arguments{
\item{data.file}{A string. Path to the CSV file with genotype dosage data, including marker ID,
parental genotypes, marker metadata (e.g., chromosome, position, ref/alt),
and progeny dosage calls.}

\item{pedigree.file}{A string. Path to the CSV file with three columns: \code{cross}, \code{parent_1}, and \code{parent_2},
indicating the cross name and its respective parents.}

\item{ploidy.vec}{A named numeric vector indicating the ploidy level for each parent.
Names must correspond to parental names in the \code{pedigree.file}.}

\item{filter.non.conforming}{Logical. If \code{TRUE}, remove genotype calls that violate
the expected segregation range under no double reduction.}

\item{filter.redundant}{Logical. If \code{TRUE}, remove redundant markers.}

\item{verbose}{Logical. If \code{TRUE}, print progress and summary messages.}
}
\value{
An object of class \code{mappoly.data.list}, a named list of \code{mappoly.data} objects
for each cross found in the pedigree.
}
\description{
This function takes genotype and pedigree files to generate
a list of \code{mappoly.data} objects for multiple F1 populations. It performs
optional filtering for non-conforming dosage classes and redundant markers.
}
\examples{
ploidy.vec <- c(4, 2, 4, 2, 4, 4)
names(ploidy.vec) <- c("P1", "P2", "P3", "P4", "P5", "P6")
result <- read_multipop_geno_csv(
  data.file = "path/to/data_multi_pop.csv",
  pedigree.file = "path/to/pedigree.csv",
  ploidy.vec = ploidy.vec
)
}
